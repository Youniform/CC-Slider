{"ast":null,"code":"var _jsxFileName = \"/home/b/Downloads/puzzle-test/slider-puzzle-question-master/src/components/Board.js\";\nimport React from \"react\";\nimport Piece from \"./Piece\";\nimport \"./Board.css\";\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.pieces = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n    this.shuffled = this.shuffle(this.pieces);\n    this.state = {\n      pieces: this.shuffled\n    };\n  }\n\n  shuffle(array) {\n    let counter = array.length;\n\n    while (counter > 0) {\n      let index = Math.floor(Math.random() * counter);\n      counter--;\n      let temp = array[counter];\n      array[counter] = array[index];\n      array[index] = temp;\n    }\n\n    return array;\n  }\n\n  render() {\n    const thePuzzle = [];\n\n    for (let i = 0; i < this.state.pieces.length; i++) {\n      let element = /*#__PURE__*/React.createElement(Piece, {\n        number: this.state.pieces[i],\n        position: i,\n        key: this.state.pieces[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 18\n        }\n      });\n      thePuzzle.push(element);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"the-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 4\n      }\n    }, thePuzzle);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/b/Downloads/puzzle-test/slider-puzzle-question-master/src/components/Board.js"],"names":["React","Piece","Board","Component","constructor","props","pieces","shuffled","shuffle","state","array","counter","length","index","Math","floor","random","temp","render","thePuzzle","i","element","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAc,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+C,EAA/C,EAAmD,EAAnD,CAAd;AACA,SAAKC,QAAL,GAAgB,KAAKC,OAAL,CAAa,KAAKF,MAAlB,CAAhB;AACA,SAAKG,KAAL,GAAa;AACZH,MAAAA,MAAM,EAAE,KAAKC;AADD,KAAb;AAGA;;AAEDC,EAAAA,OAAO,CAACE,KAAD,EAAQ;AACd,QAAIC,OAAO,GAAGD,KAAK,CAACE,MAApB;;AACA,WAAOD,OAAO,GAAG,CAAjB,EAAoB;AACnB,UAAIE,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,OAA3B,CAAZ;AACAA,MAAAA,OAAO;AACP,UAAIM,IAAI,GAAGP,KAAK,CAACC,OAAD,CAAhB;AACAD,MAAAA,KAAK,CAACC,OAAD,CAAL,GAAiBD,KAAK,CAACG,KAAD,CAAtB;AACAH,MAAAA,KAAK,CAACG,KAAD,CAAL,GAAeI,IAAf;AACA;;AAED,WAAOP,KAAP;AACA;;AAGDQ,EAAAA,MAAM,GAAG;AACR,UAAMC,SAAS,GAAG,EAAlB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAG,KAAKX,KAAL,CAAWH,MAAX,CAAkBM,MAApC,EAA4CQ,CAAC,EAA7C,EAAiD;AAChD,UAAIC,OAAO,gBAAG,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWH,MAAX,CAAkBc,CAAlB,CAAf;AAAqC,QAAA,QAAQ,EAAEA,CAA/C;AAAkD,QAAA,GAAG,EAAE,KAAKX,KAAL,CAAWH,MAAX,CAAkBc,CAAlB,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACAD,MAAAA,SAAS,CAACG,IAAV,CAAeD,OAAf;AACA;;AAED,wBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEF,SADF,CADD;AAKA;;AArCkC;;AAwCpC,eAAejB,KAAf","sourcesContent":["import React from \"react\";\nimport Piece from \"./Piece\";\nimport \"./Board.css\";\n\nclass Board extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.pieces = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n\t\tthis.shuffled = this.shuffle(this.pieces);\n\t\tthis.state = {\n\t\t\tpieces: this.shuffled\n\t\t}   \n\t}\n\n\tshuffle(array) {\n\t\tlet counter = array.length;\n\t\twhile (counter > 0) {\n\t\t\tlet index = Math.floor(Math.random() * counter);\n\t\t\tcounter--;\n\t\t\tlet temp = array[counter];\n\t\t\tarray[counter] = array[index];\n\t\t\tarray[index] = temp;\n\t\t}\n\n\t\treturn array;\n\t}\n\t\n\n\trender() {\n\t\tconst thePuzzle = [];\n\t\tfor (let i=0; i < this.state.pieces.length; i++) {\n\t\t\tlet element = <Piece number={this.state.pieces[i]} position={i} key={this.state.pieces[i]} />;\n\t\t\tthePuzzle.push(element);\n\t\t}\n\n\t\treturn(\n\t\t\t<div className=\"the-board\">\n\t\t\t\t{thePuzzle}\n\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}