{"ast":null,"code":"var _jsxFileName = \"/home/b/Downloads/puzzle-test/slider-puzzle-question-master/src/components/Board.js\";\nimport React from \"react\";\nimport Piece from \"./Piece\";\nimport \"./Board.css\";\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.pieces = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n    this.shuffled = this.shuffle(this.pieces);\n    this.grid = [{\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 2,\n      y: 0\n    }, {\n      x: 3,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }, {\n      x: 2,\n      y: 1\n    }, {\n      x: 3,\n      y: 1\n    }, {\n      x: 0,\n      y: 2\n    }, {\n      x: 1,\n      y: 2\n    }, {\n      x: 2,\n      y: 2\n    }, {\n      x: 3,\n      y: 2\n    }, {\n      x: 0,\n      y: 3\n    }, {\n      x: 1,\n      y: 3\n    }, {\n      x: 2,\n      y: 3\n    }, {\n      x: 3,\n      y: 3\n    }];\n    this.callMeBack = this.callMeBack.bind(this);\n    Board.instance = this;\n    this.state = {\n      pieces: this.shuffled\n    };\n  }\n\n  shuffle(array) {\n    let counter = array.length;\n\n    while (counter > 0) {\n      let index = Math.floor(Math.random() * counter);\n      counter--;\n      let temp = array[counter];\n      array[counter] = array[index];\n      array[index] = temp;\n    }\n\n    return array;\n  }\n\n  callMeBack() {\n    console.log(\"maybe?\");\n  }\n\n  render() {\n    const thePuzzle = [];\n\n    for (let i = 0; i < this.state.pieces.length; i++) {\n      let element = /*#__PURE__*/React.createElement(Piece, {\n        number: this.state.pieces[i],\n        callMe: this.callMeBack,\n        x: this.grid[i].x,\n        y: this.grid[i].y,\n        key: this.state.pieces[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 18\n        }\n      });\n      thePuzzle.push(element);\n    }\n\n    console.log(Piece.instances);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"the-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 4\n      }\n    }, thePuzzle);\n  }\n\n}\n\nPiece.instances = [];\nexport default Board;","map":{"version":3,"sources":["/home/b/Downloads/puzzle-test/slider-puzzle-question-master/src/components/Board.js"],"names":["React","Piece","Board","Component","constructor","props","pieces","shuffled","shuffle","grid","x","y","callMeBack","bind","instance","state","array","counter","length","index","Math","floor","random","temp","console","log","render","thePuzzle","i","element","push","instances"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Piece from \"./Piece\";\nimport \"./Board.css\";\n\nclass Board extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.pieces = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n\t\tthis.shuffled = this.shuffle(this.pieces);\n\t\tthis.grid = [\n\t\t\t\t\t\t{x:0, y:0}, {x:1, y:0}, {x:2, y:0}, {x:3,y:0},\n\t\t\t\t\t\t{x:0, y:1}, {x:1, y:1}, {x:2, y:1}, {x:3,y:1},\n\t\t\t\t\t\t{x:0, y:2}, {x:1, y:2}, {x:2, y:2}, {x:3,y:2},\n\t\t\t\t\t\t{x:0, y:3}, {x:1, y:3}, {x:2, y:3}, {x:3,y:3}\n\t\t\t\t\t];\n\t\tthis.callMeBack = this.callMeBack.bind(this);\n\t\tBoard.instance = this;\n\t\tthis.state = {\n\t\t\tpieces: this.shuffled\n\t\t}   \n\t}\n\n\tshuffle(array) {\n\t\tlet counter = array.length;\n\t\twhile (counter > 0) {\n\t\t\tlet index = Math.floor(Math.random() * counter);\n\t\t\tcounter--;\n\t\t\tlet temp = array[counter];\n\t\t\tarray[counter] = array[index];\n\t\t\tarray[index] = temp;\n\t\t}\n\n\t\treturn array;\n\t}\n\t\n\tcallMeBack() {\n\t\tconsole.log(\"maybe?\");\n\t\t\n\t}\n\n\trender() {\n\t\tconst thePuzzle = [];\n\t\tfor (let i=0; i < this.state.pieces.length; i++) {\n\t\t\tlet element = <Piece number={this.state.pieces[i]} callMe={this.callMeBack} x={this.grid[i].x} y={this.grid[i].y} key={this.state.pieces[i]} />;\n\t\t\tthePuzzle.push(element);\n\t\t}\n\t\tconsole.log(Piece.instances);\n\t\treturn(\n\t\t\t<div className=\"the-board\">\n\t\t\t\t{thePuzzle}\n\t\t\t</div>\n\t\t\t);\n\t}\n}\nPiece.instances = [];\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}