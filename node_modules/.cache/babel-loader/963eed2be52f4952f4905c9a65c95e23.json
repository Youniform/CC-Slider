{"ast":null,"code":"var _jsxFileName = \"/home/b/Downloads/puzzle-test/slider-puzzle-question-master/src/components/Tile.js\";\nimport React from 'react';\nimport Grid from './Grid';\n\nclass Tile extends React.Component {\n  constructor(props) {\n    super(props);\n    Tile.instances.push(this);\n    this.state = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  render() {\n    const width = `${Tile.size}px`;\n    const height = `${Tile.size}px`;\n    const top = `${this.state.y * Tile.size}px`;\n    const left = `${this.state.x * Tile.size}px`;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tile\",\n      style: {\n        width,\n        height,\n        top,\n        left\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 4\n      }\n    });\n  }\n\n}\n\nTile.instances = [];\nTile.size = 100;\n\nTile.randomize = () => {\n  const cells = Grid.instance.cells.slice();\n\n  for (let tile of Tile.instances) {\n    const cellIndex = Math.floor(Math.random() * cells.length);\n    const cell = cells.splice(cellIndex, 1)[0];\n    tile.setState({\n      x: cell.x,\n      y: cell.y\n    });\n  }\n};\n\nexport default Tile;","map":{"version":3,"sources":["/home/b/Downloads/puzzle-test/slider-puzzle-question-master/src/components/Tile.js"],"names":["React","Grid","Tile","Component","constructor","props","instances","push","state","x","y","render","width","size","height","top","left","randomize","cells","instance","slice","tile","cellIndex","Math","floor","random","length","cell","splice","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACAH,IAAAA,IAAI,CAACI,SAAL,CAAeC,IAAf,CAAoB,IAApB;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,CAAC,EAAE,CADS;AAEZC,MAAAA,CAAC,EAAE;AAFS,KAAb;AAKA;;AAEDC,EAAAA,MAAM,GAAG;AACR,UAAMC,KAAK,GAAI,GAAEV,IAAI,CAACW,IAAK,IAA3B;AACA,UAAMC,MAAM,GAAI,GAAEZ,IAAI,CAACW,IAAK,IAA5B;AACA,UAAME,GAAG,GAAI,GAAE,KAAKP,KAAL,CAAWE,CAAX,GAAeR,IAAI,CAACW,IAAK,IAAxC;AACA,UAAMG,IAAI,GAAI,GAAE,KAAKR,KAAL,CAAWC,CAAX,GAAeP,IAAI,CAACW,IAAK,IAAzC;AACA,wBACC;AAAK,MAAA,SAAS,EAAC,MAAf;AACC,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAF;AAASE,QAAAA,MAAT;AAAiBC,QAAAA,GAAjB;AAAsBC,QAAAA;AAAtB,OADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAKA;;AAtBiC;;AA0BnCd,IAAI,CAACI,SAAL,GAAiB,EAAjB;AACAJ,IAAI,CAACW,IAAL,GAAY,GAAZ;;AACAX,IAAI,CAACe,SAAL,GAAiB,MAAM;AACtB,QAAMC,KAAK,GAAGjB,IAAI,CAACkB,QAAL,CAAcD,KAAd,CAAoBE,KAApB,EAAd;;AAEA,OAAK,IAAIC,IAAT,IAAiBnB,IAAI,CAACI,SAAtB,EAAiC;AAChC,UAAMgB,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,KAAK,CAACQ,MAAjC,CAAlB;AACA,UAAMC,IAAI,GAAGT,KAAK,CAACU,MAAN,CAAaN,SAAb,EAAwB,CAAxB,EAA2B,CAA3B,CAAb;AAEAD,IAAAA,IAAI,CAACQ,QAAL,CAAc;AACbpB,MAAAA,CAAC,EAAEkB,IAAI,CAAClB,CADK;AAEbC,MAAAA,CAAC,EAAEiB,IAAI,CAACjB;AAFK,KAAd;AAIA;AACD,CAZD;;AAcA,eAAeR,IAAf","sourcesContent":["import React from 'react';\nimport Grid from './Grid';\n\nclass Tile extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tTile.instances.push(this);\n\n\t\tthis.state = {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t}\n\n\t}\n\n\trender() {\n\t\tconst width = `${Tile.size}px`;\n\t\tconst height = `${Tile.size}px`;\n\t\tconst top = `${this.state.y * Tile.size}px`;\n\t\tconst left = `${this.state.x * Tile.size}px`;\n\t\treturn(\n\t\t\t<div className='tile'\n\t\t\t\tstyle={{ width, height, top, left }}\n\t\t\t></div>\n\t\t\t);\n\t}\n}\n\n\nTile.instances = [];\nTile.size = 100;\nTile.randomize = () => {\n\tconst cells = Grid.instance.cells.slice();\n\n\tfor (let tile of Tile.instances) {\n\t\tconst cellIndex = Math.floor(Math.random() * cells.length);\n\t\tconst cell = cells.splice(cellIndex, 1)[0];\n\n\t\ttile.setState({\n\t\t\tx: cell.x,\n\t\t\ty: cell.y\n\t\t});\n\t}\n};\n\nexport default Tile;"]},"metadata":{},"sourceType":"module"}