{"ast":null,"code":"var _jsxFileName = \"/home/b/Downloads/puzzle-test/slider-bak/src/components/Tile.js\";\nimport React from 'react';\nimport Game from './Game';\n\nclass Tile extends React.Component {\n  constructor(props) {\n    super(props);\n    Tile.instances.push(this);\n    this.props = props;\n    this.destination = props.destination;\n    this.state = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  render() {\n    const width = `${Tile.size}px`;\n    const height = `${Tile.size}px`;\n    const top = `${this.state.y * Tile.size}px`;\n    const left = `${this.state.x * Tile.size}px`;\n    const backgroundImage = `url('img/${this.props.destination.x}_${this.props.destination.y}.png')`;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tile\",\n      style: {\n        width,\n        height,\n        top,\n        left,\n        backgroundImage\n      },\n      onClick: () => this.slide(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"yellow\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 4\n      }\n    }, this.props.destination.x), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"aqua\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 4\n      }\n    }, this.props.destination.y));\n  }\n\n  slide() {\n    console.log(this.emptyNeighbor);\n\n    switch (this.emptyNeighbor) {\n      case 'top':\n        this.setState({\n          y: this.state.y - 1\n        });\n        break;\n\n      case \"left\":\n        this.setState({\n          x: this.state.x - 1\n        });\n        break;\n\n      case 'bottom':\n        this.setState({\n          y: this.state.y + 1\n        });\n        break;\n\n      case \"right\":\n        this.setState({\n          x: this.state.x + 1\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  componentDidUpdate() {\n    Game.instance.checkVictory();\n  }\n\n  get neighbors() {\n    let top = Tile.get(this.state.x, this.state.y - 1);\n    let left = Tile.get(this.state.x - 1, this.state.y);\n    let bottom = Tile.get(this.state.x, this.state.y + 1);\n    let right = Tile.get(this.state.x + 1, this.state.y);\n    if (this.state.y === 0) top = undefined;\n    if (this.state.x === 0) left = undefined;\n    if (this.state.y === 3) bottom = undefined;\n    if (this.state.x === 3) right = undefined;\n    return {\n      top,\n      left,\n      bottom,\n      right\n    };\n  }\n\n  get emptyNeighbor() {\n    if (this.neighbors.top === null) return 'top';\n    if (this.neighbors.left === null) return 'left';\n    if (this.neighbors.bottom === null) return 'bottom';\n    if (this.neighbors.right === null) return 'right';\n    return null;\n  }\n\n}\n\nTile.get = (x, y) => {\n  for (const tile of Tile.instances) {\n    if (tile.state.x === x && tile.state.y === y) {\n      return tile;\n    }\n  }\n\n  return null;\n};\n\nTile.instances = [];\nTile.size = 100;\nexport default Tile;","map":{"version":3,"sources":["/home/b/Downloads/puzzle-test/slider-bak/src/components/Tile.js"],"names":["React","Game","Tile","Component","constructor","props","instances","push","destination","state","x","y","render","width","size","height","top","left","backgroundImage","slide","color","console","log","emptyNeighbor","setState","componentDidUpdate","instance","checkVictory","neighbors","get","bottom","right","undefined","tile"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Game from './Game' ;\n\n\nclass Tile extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tTile.instances.push(this);\n\t\tthis.props = props;\n\t\tthis.destination = props.destination;\n\t\tthis.state = {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t}\n\n\t}\n\n\trender(){\n\t\tconst width = `${Tile.size}px`;\n\t\tconst height = `${Tile.size}px`;\n\t\tconst top = `${this.state.y * Tile.size}px`;\n\t\tconst left = `${this.state.x * Tile.size}px`;\n\t\tconst backgroundImage = `url('img/${this.props.destination.x}_${this.props.destination.y}.png')`;\n\t\treturn(\n\t\t\t<div className='tile'\n\t\t\t\tstyle={{ width, height, top, left, backgroundImage }}\n\t\t\t\tonClick={() => this.slide()  }\n\t\t\t>\n\t\t\t<p style={{color:\"yellow\"}}>{this.props.destination.x}</p>\n\t\t\t<p style={{color:\"aqua\"}}>{this.props.destination.y}</p> \n\t\t\t</div>\n\t\t\t);\n\t}\n\n\tslide() {\n\t\tconsole.log(this.emptyNeighbor);\n\t\tswitch (this.emptyNeighbor) {\n\t\t\tcase 'top':\n\t\t\t\tthis.setState({ y: this.state.y - 1 });\n\t\t\t\tbreak;\n\t\t\tcase \"left\": \n\t\t\t\tthis.setState({ x: this.state.x -1 });\n\t\t\t\tbreak;\n\t\t\tcase 'bottom': \n\t\t\t\tthis.setState({ y: this.state.y + 1 });\n\t\t\t\tbreak;\n\t\t\tcase \"right\": \n\t\t\t\tthis.setState({ x: this.state.x + 1 });\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\tcomponentDidUpdate()\n\t{\n\t\tGame.instance.checkVictory();\n\t}\n\tget neighbors()\n\t{\n\t\tlet top = Tile.get(this.state.x, this.state.y -1);\n\t\tlet left = Tile.get(this.state.x - 1, this.state.y);\n\t\tlet bottom = Tile.get(this.state.x, this.state.y+1);\n\t\tlet right = Tile.get(this.state.x+1, this.state.y);\n\n\t\tif (this.state.y === 0 ) top = undefined;\n\t\tif (this.state.x === 0 ) left = undefined;\n\t\tif (this.state.y === 3 ) bottom = undefined;\n\t\tif (this.state.x === 3 ) right = undefined;\n\t\treturn { top, left, bottom, right};\n\n\t}\n\tget emptyNeighbor()\n\t{\n\t\tif (this.neighbors.top === null) return 'top';\n\t\tif (this.neighbors.left === null) return 'left';\n\t\tif (this.neighbors.bottom === null) return 'bottom';\n\t\tif (this.neighbors.right === null) return 'right';\n\t\treturn null;\n\t}\n}\n\n\nTile.get = (x,y) => {\n\tfor (const tile of Tile.instances) {\n\t\tif (tile.state.x === x && tile.state.y === y) {\n\t\t\treturn tile; \n\t\t}\n\t}\n\treturn null;\n};\n\nTile.instances = [];\nTile.size = 100;\n\nexport default Tile;\n\n\n\n"]},"metadata":{},"sourceType":"module"}