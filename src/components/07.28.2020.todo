Tuesday July 28th, 2020

Applicant Project for GoReact

First time taking a swing at it


applicant-project:
Thanks for applying to GoReact! To help us learn more about you and give you an opportunity to show us your stuff, we'd like you to build a simple web application.  We will go over the requirements for what this web application needs to do, but you are free to write it using any tools/technologies/frameworks/languages/whatever you want.  We would encourage you to build it using the technologies we use at GoReact, but if you are uncomfortable with that the burden is on you to make your project easy for us to run.  We want to see how you think, solve problems and build solutions.

The Project
We do a lot with media and files at GoReact, so we'd like you to build a simple file manager app.  We only want to see a few things from this app:

 ☐ Allow uploading and persisting .jpg and .mp4 files
 ☐ Show a UI where users can upload new files, and show the list of files uploaded so far
 ☐ Provide a way to "preview" the uploaded files.  For images, we want to see the image, and for mp4's, play the video
 ☐ Write basic tests for your code, and document a way to run them

GoReact is built using PHP 7.2 with Laravel as the web framework.  On the front-end we use Webpack, TypeScript and angularjs. You are free to build your project with whatever you want, but we suggest using PHP with a Laravel backend.
Your project should include a README that explains how to setup and run your project, as well as how to execute your tests.
MAKE SURE YOU TEST YOUR INSTRUCTIONS YOURSELF.
You don't want us to tell you your instructions don't work.

Extra Requirements
In addition to the above requirements, we want you to choose at least one more from the list below to include in your implementation:

 ☐ Generate code coverage for your tests, and document how coverage stats can be generated
 ☐ Add a login mechanism, and allow each user to have their own list of files
 ☐ Add a way to associate a title, description and tags with a file and have those changes persist.  Allow for filtering the list of files with search terms that can match these new fields
 ☐ Use S3 or some other cloud-based storage for the files
 ☐ In addition to mp4 and jpg, support pdf files, including the ability to render and preview them
 ☐ Use a responsive layout that works and looks great on desktops and mobile devices
Add player controls when previewing mp4 files.  Include controls that allow for:

Skipping forward and back 10 seconds
Pause/Play
Speed up/slow down playback


Have a cool idea not on this list? Go ahead and do it but let us know what you decided to do!

Submission:
Send us a link to the code you have written (GitHub, GitLab, BitBucket, etc)
Record yourself demo-ing your project where you walk us through all the functionality, including running your tests, and provide us a link to this demo video.


Timeline:
We expect you to take somewhere between 2-4 hours to complete this and would love to see your project within 3 days of us sending this request to you.  If you need more time because you want to go above and beyond, or if you are just needing more time, just reach out and let us know why.